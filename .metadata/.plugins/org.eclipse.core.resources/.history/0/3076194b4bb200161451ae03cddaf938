package avrms.socket.app;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URISyntaxException;

import javax.websocket.Session;

import org.java_websocket.client.WebSocketClient;
import org.java_websocket.drafts.Draft_17;
import org.java_websocket.handshake.ServerHandshake;
import org.json.JSONException;
import org.json.JSONObject;

import avrms.socket.WebsocketClientEndpoint;

public class SocketApp {
	public static void main(String[] args) throws IOException, InterruptedException, URISyntaxException {
		/**
		 * args[0] : address (#ip#:#port#/#applicationName#)- ex) 127.0.0.1:8080/avrms
		 * args[1] : vehicle identification name 
		 */
		for (int i = 0; i < args.length; i++) {
			System.out.println("args: "+args[i]);
		}
		
		WebSocketClient wsc = new WebSocketClient(new URI("ws://"+args[0]+"/realtime/echo.do"),new Draft_17()) {
			
			
			public void onOpen(Session arg0) {
				// TODO Auto-generated method stub
				System.out.println("opened");
				Process proc;
				try {
					JSONObject json = new JSONObject();
					json.put("id", args[1]);
					this.send("");
//					proc = Runtime.getRuntime().exec("rostopic echo /mavros/global_position/raw/fix");
					proc = Runtime.getRuntime().exec("ping google.com");
//					System.out.println("toString():"+arg0.toString()+"\n http status message:"+arg0.getHttpStatusMessage()+"\n content:"+arg0.getContent());
					
					BufferedReader br = new BufferedReader(new InputStreamReader(proc.getInputStream()));
					String line = null;
					while((line = br.readLine())!=null){
						this.send(line);
					}
				
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
			
			@Override
			public void onMessage(String arg0) {
				// TODO Auto-generated method stub
				System.out.println("messaging");
			}
			
			@Override
			public void onError(Exception arg0) {
				// TODO Auto-generated method stub
				System.out.println("error");
			}
			
			@Override
			public void onClose(int arg0, String arg1, boolean arg2) {
				// TODO Auto-generated method stub
				System.out.println("closed");
			}
		};
		
		wsc.connect();
		// open websocket
        final WebsocketClientEndpoint clientEndPoint = new WebsocketClientEndpoint(new URI("wss://real.okcoin.cn:10440/websocket/okcoinapi"));
        
        // add listener
        clientEndPoint.addMessageHandler(new WebsocketClientEndpoint.MessageHandler() {
            public void handleMessage(String message) {
                System.out.println(message);
            }
        });
        
	}
	public static void readOutPut(Process proc) throws IOException, InterruptedException, URISyntaxException{
		// Read the output
		// open websocket
		
		
		
		Thread.sleep(10000);
	}

}
