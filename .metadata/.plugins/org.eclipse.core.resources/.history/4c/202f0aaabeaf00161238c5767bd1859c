package avrms.socket.app;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Timer;
import java.util.TimerTask;

import org.json.JSONException;


import avrms.socket.WebsocketClientEndpoint;
public class TestApp {

	public static void main(String[] args) throws JSONException, URISyntaxException, IOException {
		for (int i = 0; i < args.length; i++) {
			System.out.println("Argument: "+args[i]);
		}
		/**
		 * 1. We have to send address through arguement
		 * 
		 * 2.When launching this application 
		 * topic that we want to monitor should be
		 * acknowledged by sending it as argument
		 * 
		 * 
		 */
		try {
            // open websocket
			WebsocketClientEndpoint clientEndPoint = new WebsocketClientEndpoint(new URI("ws://localhost:8080/avrms/realtime/echo.do"));

            // add listener
            clientEndPoint.addMessageHandler(new WebsocketClientEndpoint.MessageHandler() {
                public void handleMessage(String message) {
                    System.out.println(message);
                }
            });
            readOutPut(Runtime.getRuntime().exec("ping -c 3 www.google.com"));
            // send message to websocket
//            clientEndPoint.sendMessage("{'event':'addChannel','channel':'ok_btccny_ticker'}");

            // wait 5 seconds for messages from websocket
            Thread.sleep(5000);
     
        } catch (InterruptedException ex) {
            System.err.println("InterruptedException exception: " + ex.getMessage());
        } catch (URISyntaxException ex) {
            System.err.println("URISyntaxException exception: " + ex.getMessage());
        }
		
	}
	public static void readOutPut(Process proc) throws IOException, InterruptedException{
    	// Read the output

  	  int initialDelay = 100; // start after 0.1 seconds
      int period = 100;        // repeat every 0.1 seconds	
    	Timer timer = new Timer();
    	TimerTask task = new TimerTask() {
  		  public void run() {
  			BufferedReader reader =  new BufferedReader(new InputStreamReader(proc.getInputStream()));
			String line = "";
			try {
				if((line = reader.readLine()) != null){

					clientEndPoint.sendMessage("LOG:"+line);
//					System.out.println("LOG:"+line);
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
  		  }
  	  };
  	  timer.scheduleAtFixedRate(task, initialDelay, period);
  	  
    }
}
