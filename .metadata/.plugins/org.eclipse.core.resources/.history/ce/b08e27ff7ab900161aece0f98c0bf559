package avrms.socket.message;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.json.simple.JSONObject;

import avrms.socket.bean.NavSatFix;

public class MAVROSMessageParser {
	public MAVROSMessageParser() {
		// TODO Auto-generated constructor stub
	}
	
	public String parseMessage(String type,String msg){
		/**
		 * Choosing message parsing method
		 */
		String result_msg = null;
		switch (type) {
		case "gps":
			result_msg = GPSMessageParsing(msg);
			break;
		case "state":

			break;
		case "local_pose":

			break;
		case "battery":

			break;

		}
		return null;
	}
	
	
	public String GPSMessageParsing(String msg){
		String result = null;
		
		String latitude_pattern = "latitude: (.)*";
		String longitude_pattern = "longitude: (.)*";
		String altitude_pattern = "altitude: (.)*";
		
		Matcher matcher = null;
		NavSatFix position = null;
		
		JSONObject json = null;
		if(msg.matches(latitude_pattern)){
//			System.out.println("latitude detected//"+msg);
			Pattern lat_pat = Pattern.compile("latitude: (.*)");
			matcher = lat_pat.matcher(msg);
			if(matcher.find()){
//				System.out.println("found - "+matcher.group(1));
				position = new NavSatFix();
				// 			   position.setLatitude(matcher.group(1));
				json = new JSONObject();
				json.put("latitude", matcher.group(1));
				
				result = json.toJSONString();
				
			}
		}else if(msg.matches(longitude_pattern)){
//			System.out.println("longitude detected//"+msg);
			Pattern long_pat = Pattern.compile("longitude: (.*)");
			matcher = long_pat.matcher(msg);
			if(matcher.find()){
//				System.out.println("found - "+matcher.group(1));
				// 			   position.setLongitude(matcher.group(1));
				json = new JSONObject();
				json.put("longitude", matcher.group(1));
				
				result = json.toJSONString();
			}
		}else if(msg.matches(altitude_pattern)){
//			System.out.println("altitude detected//"+msg);
			Pattern alt_pat = Pattern.compile("altitude: (.*)");
			matcher = alt_pat.matcher(msg);
			if(matcher.find()){
//				System.out.println("found - "+matcher.group(1));
				// 			   position.setAltitude(matcher.group(1));
				json = new JSONObject();
				json.put("altitude", matcher.group(1));

				result = json.toJSONString();
			}
		}else{
//			System.out.println("not detected//"+msg);
		}
		
		return result;
	}
}
